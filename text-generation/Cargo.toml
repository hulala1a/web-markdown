[package]
name = "text_generation"
version = "0.1.0"
authors = ["lxy <liuxinyucpu@163.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
cfg-if = "1.0.0"
serde = { version = "1.0.171", features = ["derive"] }
serde_plain = "1.0.2"
serde_json = "1.0.99"
wasm-bindgen = "0.2.87"
wasm-bindgen-futures = "0.4.37"
wasm-logger = "0.2"
yew-agent = "0.2.0"
yew = { version = "0.20.0", features = ["csr"] }
lazy_static = "1.2"
serde_derive = "1.0.102"
rand = "0.7.3"



# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
candle-core = { version = "0.6.0" }
candle-nn = { version = "0.6.0" }
candle-transformers = { version = "0.6.0" }
num-traits = {}
tokenizers = { version = "0.19.1", default-features = false, features = ["unstable_wasm"] }

getrandom = { version = "0.2", features = ["js"] }
gloo = "0.11"
byteorder = { version = "1.5.0" }
js-sys = "0.3.64"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
# opt-level = "s"

[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[features]
# default = ["console_error_panic_hook" ,"wee_alloc"]
default = ["console_error_panic_hook"]
